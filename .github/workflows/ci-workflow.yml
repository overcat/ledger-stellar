name: Compilation & tests

on:
  push:
  pull_request:
    branches-ignore:
      - 'temp*'
      - 'tmp*'
  release:
    types: [ created ]

jobs:
  job_nanos_build_debug:
    name: Build debug app for NanoS
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make DEBUG=1

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: stellar-app-nanos-debug
          path: bin

  job_nanox_build_debug:
    name: Build debug app for NanoX
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: stellar-app-nanox-debug
          path: bin

  job_nanosp_build_debug:
    name: Build debug app for NanoSP
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOSP_SDK

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: stellar-app-nanosp-debug
          path: bin

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    needs: job_nanoS_build_debug

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_unit_test:
    name: Unit test
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build unit tests
        run: |
          make tests-unit

      - name: Generate code coverage
        run: |
          cd tests_unit/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base && \
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture && \
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info && \
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/tests_unit/*' -o coverage.info && \
          genhtml coverage.info -o coverage

      - uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: tests_unit/coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: ./tests_unit/coverage.info
          flags: unittests
          name: codecov-app-stellar
          fail_ci_if_error: true
          verbose: true

  building_for_e2e_tests:
    name: Building binaries for E2E tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      # https://github.com/actions/checkout/issues/760
      - name: Work around permission issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: actions/checkout@v2

      - name: Build testing binaries
        run: ./build_elfs.sh

      - name: Upload app binaries
        uses: actions/upload-artifact@v2
        with:
          name: e2e_elfs
          path: ./elfs/

  jobs-e2e-tests:
    name: E2E tests
    needs: [building_for_e2e_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build common js
        run: cd tests_common_js && npm install && npm run build

      - name: Build/Install build js deps
        run: cd tests_zemu && npm install

      - name: Download app binaries
        uses: actions/download-artifact@v2
        with:
          path: tmp/

      - name: Gather elfs
        run: cp `find tmp/e2e_elfs/ -name "*.elf"` tests_zemu/elfs/

      - name: Run zemu tests
        run: cd tests_zemu && npm run test