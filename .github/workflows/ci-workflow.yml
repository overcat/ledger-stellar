name: Compilation & tests

on:
  push:
  pull_request:
    branches-ignore:
      - 'temp*'
      - 'tmp*'
  release:
    types: [ created ]

jobs:
  job_nanoS_build_debug:
    name: Build debug app for NanoS
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install dependancies
        run: |
          apt-get update -y
          apt-get install libbsd-dev -y

      - name: Build
        run: |
          make DEBUG=1

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: stellar-app-nanoS-debug
          path: bin

  job_nanoX_build_debug:
    name: Build debug app for NanoX
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install dependancies
        run: |
          apt-get update -y
          apt-get install libbsd-dev -y

      - name: Build
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: stellar-app-nanoX-debug
          path: bin

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    needs: job_nanoS_build_debug

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependancies
        run: |
          apt-get update -y
          apt-get install libbsd-dev -y

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_unit_test:
    name: Unit test
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/overcat/ledger-devcontainer:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install dependancies
        run: |
          apt-get update -y
          apt-get install libbsd-dev -y

      - name: Build unit tests
        run: |
          make unit_tests

      - name: Generate code coverage
        run: |
          cd unit-tests/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base && \
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture && \
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info && \
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/unit-tests/*' -o coverage.info && \
          genhtml coverage.info -o coverage

      - uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: unit-tests/coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: ./unit-tests/coverage.info
          flags: unittests
          name: codecov-app-stellar
          fail_ci_if_error: true
          verbose: true

